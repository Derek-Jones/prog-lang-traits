
#
# 23 Apr 22


wikipedia
high-level
general-purpose

keyword
and	# A logical operator
as	# To create an alias
assert	# For debugging
break	# To break out of a loop
class	# To define a class
continue	# To continue to the next iteration of a loop
def	# To define a function
del	# To delete an object
elif	# Used in conditional statements, same as else if
else	# Used in conditional statements
except	# Used with exceptions, what to do when an exception occurs
False	# Boolean value, result of comparison operations
finally	# Used with exceptions, a block of code that will be executed no matter if there is an exception or not
for	# To create a for loop
from	# To import specific parts of a module
global	# To declare a global variable
if	# To make a conditional statement
import	# To import a module
in	# To check if a value is present in a list, tuple, etc.
is	# To test if two variables are equal
lambda	# To create an anonymous function
None	# Represents a null value
nonlocal	# To declare a non-local variable
not	# A logical operator
or	# A logical operator
pass	# A null statement, a statement that will do nothing
raise	# To raise an exception
return	# To exit a function and return a value
True	# Boolean value, result of comparison operations
try	# To make a try...except statement
while	# To create a while loop
with	# Used to simplify exception handling
yield	# To end a function, returns a generator

binary-operator
() 	17	# Function call

[] 	16	# Slicing Subscription

.	15	# Attribute reference

** 	14	# Exponentiation

* 	11	# Multiplication, division, remainder
/ 	11	# Multiplication, division, remainder
% 	11	# Multiplication, division, remainder

+ 	10	# Addition, subtraction
- 	10	# Addition, subtraction

<< 	9	# Bitwise shifts
>> 	9	# Bitwise shifts

& 	8	# Bitwise AND

^ 	7	# Bitwise XOR

| 	6	# Bitwise OR

in	5	# Comparisons, membership, identity
not	5	# Comparisons, membership, identity
is	5	# Comparisons, membership, identity
<	5	# Comparisons, membership, identity
<=	5	# Comparisons, membership, identity
>	5	# Comparisons, membership, identity
>=	5	# Comparisons, membership, identity
<> 	5	# Comparisons, membership, identity
!= 	5	# Comparisons, membership, identity
== 	5	# Comparisons, membership, identity

and 	3	# Boolean AND

or 	2	# Boolean OR

lambda 	1	# Lambda expression

unary-operator
~ 	13	# Bitwise not

+ 	12	# Positive, negative
- 	12	# Positive, negative

not 	4	# Boolean NOT

function-definition

arguments-number-checked
named-parameter
default-value
pass-by-assignment

